apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {
    ext.kotlin_version = "1.4.21"
    ext.gradle_tools = '3.1.3'
    ext.build_tools = '30.0.2'

    ext.compile_sdk = 30
    ext.target_sdk = 30
    ext.min_sdk = 21

    ext.application_id = 'com.kotlin.test'
    ext.version_name = '1.0'
    ext.version_code = 1
    ext.test_runner = 'android.support.test.runner.AndroidJUnitRunner'

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
        //noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task runUnitTests(dependsOn: [':app:testDebugUnitTest']) {
    description 'Run all unit tests'
}

task runAcceptanceTests(dependsOn: [':app:connectedAndroidTest']) {
    description 'Run all acceptance tests.'
}

task deployDebug(type: Exec, dependsOn: 'app:installDebug') {
    def rootDir = project.rootDir
    def localProperties = new File(rootDir, "local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream {
            inputStream -> properties.load(inputStream)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        def adb = "$sdkDir/platform-tools/adb"
        commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.kotlin.test/com.kotlin.test.core.navigation.RouteActivity'
    }
}
